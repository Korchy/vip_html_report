//---------------------------------------------------------------------------
#ifndef HtmlReportH
#define HtmlReportH
//---------------------------------------------------------------------------
#include <Classes.hpp>  // Для использования стандартных С++ - тпов данных (типа AnsiString)
#include <ADODB.hpp>    //
#include <DB.hpp>       // Чтобы можно было работать с TADOQuery
//---------------------------------------------------------------------------
// Класс, генерирующий HTML-документ
// Может создавать как документ
// 1) С нуля, тогда все форматирование текста ложится на вызывающую программу
// 2) Модифицируя уже созданный документ с помощью специальных "закладок".
// закладки должны быть расставлены заранее в документе там, где нужно будет
// вставлять какой-либо текст. Закладки м.б. 2х типов:
// а) <!--/Name/--> - закладка c именем Name на место которой просто вставляется
// некий текст
// б) <!--/Name/...TEXT.../Name/--> - закладка c именем Name содержащая в себе
// текст  TEXT. Используется чтобы в зависимости от ситуации выводить или не
// выводить текст уже содержащийся в отчете
//---------------------------------------------------------------------------
class HtmlReport
{
protected:

private:

        // Переменные
        TStringList *Text;      // Собственно текст отчета       
        
public:
        __fastcall HtmlReport(void);    // Констуктор класса
        __fastcall ~HtmlReport();       // Деструктор класса

        // Переменные
        AnsiString Path;        // Путь к файлу с готовым отчетом
        AnsiString Name;        // Название готового отчета (без расширения)
        AnsiString Ext;         // Расширение файла
        
        // Функции
        bool LoadFromFile(AnsiString SourceFile);       // Загрузка документа из которого будет формироваться отчет
        bool Save();    // Сохранение готового отчета
        bool Show();    // Показ готового отчета

        bool New();     // Создание нового отчета
        bool Add(AnsiString Txt);       // Добавление текста в конец отчета

        void ReplaceZaklad(AnsiString Name, AnsiString Txt);    // Замена закладки с именем Name на текст Txt
        bool ReplaceZakladWithADOQuery(AnsiString Name, TADOQuery* Data);       // Замена закладки с именем Name на ряд значений, содержащихся в массиве Array
        void ReplaceZakladWithArray(AnsiString Name, AnsiString Array[], int ArraySize); // Замена закладки Name на ряд значений из одномерного массива Arr размером ArraySize

        void FreeZaklad(AnsiString Name);       // Удаление закладки содержащей текст (т.е. закладка удаляется, текст остается)
        void DeleteZaklad(AnsiString Name);     // Полное удаление закладки и содержащегося в ней текста

};
//---------------------------------------------------------------------------
#endif

